---
description: Coding style guide
globs: 
alwaysApply: false
---
When writing code, follow truthy conventions like so:

if x:


if not x:



Do not use code like this:
"if 'xxZXZ' in y", string literals in code is dangerous because if the underlying string values change then you are left with excessive amount of work where you have to update each and every individual string literal. 

Use type hints. 


You are prohibited from using dictionary .get methods

You are prohibited from using try/except blocks. 

You should prefer pydantic models over dictionaries. 


Avoid writing code like this:
```
            if "npcs" in self.state:
```

Instead, do this:


try:
    npcs = self.state["npcs"]
Except KeyError:
    pass


Avoid code like this:             if hasattr(npc, "health") and npc.health is not None:


Avoid using hasattr and isinstance. 


Avoid direct string comparisons where possible. 

Avoid excessive or nested if statements which could confuse people reading the code. 



Don't write code like this:
        if "screenshot" in state and state["screenshot"]:

Why? Because it essentially hides the fact that the screenshot may not be getting sent in the state correctly, causing it to silently fail. 



For all code, regardless of programming language:

Avoid writing code that silently fails. 


For example:

        screenshot_data = state.get("screenshot", "")
        if screenshot_data:

        This is the same problem, this code will hide the fact that screenshot is missing.


Before writing any code, ask yourself, will this code potentially "hide" errors.



Review each line of code one by one and ensure that it does not have any unused variables. If there are unused variables, ask yourself the purpose, and decide whether or not these should be kept or deleted. 

Never use try except or try catch blocks, if you see one, remove it. 

Always delete unused variables, functions, or imports. 
